#pragma once
#include <stdio.h>   // Для printf (вывод в консоль)
#include <stdlib.h>  // Для rand и srand (генерация случайных чисел)
#include <time.h>    // Для time (используется для инициализации генератора случайных чисел)


class chip8 {  // Объявление класса chip8
public:
    chip8();          // Конструктор класса
    ~chip8();         // Деструктор класса

    bool drawFlag;    // Флаг, указывающий, нужно ли перерисовывать экран

    void emulateCycle();        // Функция, эмулирующая один цикл процессора CHIP-8
    void debugRender();         // Функция для отладочного вывода содержимого экрана
    bool loadApplication(const char* filename);  // Функция для загрузки ROM-файла (игры)

    // Chip8
    unsigned char gfx[64 * 32];  // Массив, представляющий дисплей CHIP-8 (64x32 пикселя)
    unsigned char key[16];       // Массив, представляющий состояние клавиатуры (16 клавиш)

private:  // Приватные члены класса (доступны только изнутри класса)
    unsigned short opcode; //для хранения текущего опкода
    unsigned char memory[4096]; //массив для представления памяти chip-8
    unsigned char V[16]; //массив для представления 16 8-битных регистров
    unsigned short I; //индексный регистр для хранения адресов в памяти
    unsigned short pc; //программный счетчик для хранения адреса следующей инструкиции, которая будет выполенена
    unsigned char delay_timer; //таймер задержки
    unsigned char sound_timer; //звуковой таймер
    unsigned short stack[16]; //стек для запоминания текущего местоположения перед выполнением перехода
    unsigned short sp; //В системе есть 16 уровней стека, и чтобы запомнить, какой уровень стека используется, нужно реализовать указатель стека (sp)
    unsigned long long lastCycleTime; // Для отслеживания времени последнего цикла


    void init();  // Функция для инициализации состояния эмулятора
};